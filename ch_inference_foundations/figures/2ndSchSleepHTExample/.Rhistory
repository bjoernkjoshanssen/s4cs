pdf('whyWeWantPValue.pdf', 6.3, 2.5)#
par(mar=c(2,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-10, 4, 0.025)#
Y <- dnorm(X) # makes better visual#
plot(X, Y, type='l', xlab='', ylab='', axes=FALSE, xlim=c(-6,3), col='#00000088')#
axis(1, at=c(-10, -5, 0, 5), expression('', 'null value'*-5*'*SE', 'null value', '')) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
text(0, yMax/2-0.02, expression('Distribution of '*bar(x)), cex=1.2)#
text(0, yMax/3-0.01, expression('if '*H[0]*' was true'), cex=1.2)#
#
arrows(-5,yMax/3, -5,yMax/20, length=0.1)#
text(-5, yMax/3, expression('observed '*bar(x)), cex=1.2, pos=3)#
#
dev.off()
pdf('whyWeWantPValue.pdf', 6.3, 2.5)#
par(mar=c(2,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-10, 4, 0.025)#
Y <- dnorm(X) # makes better visual#
plot(X, Y, type='l', xlab='', ylab='', axes=FALSE, xlim=c(-6,3), col='#00000088')#
axis(1, at=c(-10, -5, 0, 5), expression('', 'null value '*-5*'*SE', 'null value', '')) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
text(0, yMax/2-0.02, expression('Distribution of '*bar(x)), cex=1.2)#
text(0, yMax/3-0.01, expression('if '*H[0]*' was true'), cex=1.2)#
#
arrows(-5,yMax/3, -5,yMax/20, length=0.1)#
text(-5, yMax/3, expression('observed '*bar(x)), cex=1.2, pos=3)#
#
dev.off()
pdf('whyWeWantPValue.pdf', 6.3, 2.5)#
par(mar=c(2,1,.5,1), mgp=c(2.1,0.6,0))#
X <- seq(-10, 4, 0.025)#
Y <- dnorm(X) # makes better visual#
plot(X, Y, type='l', xlab='', ylab='', axes=FALSE, xlim=c(-6,3), col='#00000088')#
axis(1, at=c(-10, -5, 0, 5), expression('', 'null value '*-5*'*SE   ', 'null value', '')) #at=c(-4, -2, 0, 2, 4))#
abline(h=0) #, col='#00000088')#
yMax <- max(Y)#
#
text(0, yMax/2-0.02, expression('Distribution of '*bar(x)), cex=1.2)#
text(0, yMax/3-0.01, expression('if '*H[0]*' was true'), cex=1.2)#
#
arrows(-5,yMax/3, -5,yMax/20, length=0.1)#
text(-5, yMax/3, expression('observed '*bar(x)), cex=1.2, pos=3)#
#
dev.off()
library(openintro)#
set.seed(2)#
x <- exp(rnorm(110, log(7.5)))#
t.test(x, mu=650)#
mean(x)#
sd(x)#
length(x)#
#
pdf('histOfSleepForCollegeThatWasCheckingForMoreThan7Hours.pdf', 5, 3)#
par(mar=c(3.2, 3.5, 1, 1), las=1, mgp=c(1.9, 0.7, 0))#
histPlot(x, xlab='housing expense (dollars)', ylab='', col='#22558844')#
mtext('freqency', side=2, line=2.3, las=0)#
dev.off()
install.package(openintro)
install.packages(openintro)
\
install.packages('openintro')
library(openintro)#
set.seed(2)#
x <- exp(rnorm(110, log(7.5)))#
t.test(x, mu=650)#
mean(x)#
sd(x)#
length(x)#
#
pdf('histOfSleepForCollegeThatWasCheckingForMoreThan7Hours.pdf', 5, 3)#
par(mar=c(3.2, 3.5, 1, 1), las=1, mgp=c(1.9, 0.7, 0))#
histPlot(x, xlab='housing expense (dollars)', ylab='', col='#22558844')#
mtext('freqency', side=2, line=2.3, las=0)#
dev.off()
library(openintro)#
set.seed(2)#
x <- exp(rnorm(110, log(7.5), 0.5))#
t.test(x, mu=650)#
mean(x)#
sd(x)#
length(x)#
#
pdf('histOfSleepForCollegeThatWasCheckingForMoreThan7Hours.pdf', 5, 3)#
par(mar=c(3.2, 3.5, 1, 1), las=1, mgp=c(1.9, 0.7, 0))#
histPlot(x, xlab='housing expense (dollars)', ylab='', col='#22558844')#
mtext('freqency', side=2, line=2.3, las=0)#
dev.off()
library(openintro)#
set.seed(2)#
x <- exp(rnorm(110, log(7.5), 0.25))#
t.test(x, mu=650)#
mean(x)#
sd(x)#
length(x)#
#
pdf('histOfSleepForCollegeThatWasCheckingForMoreThan7Hours.pdf', 5, 3)#
par(mar=c(3.2, 3.5, 1, 1), las=1, mgp=c(1.9, 0.7, 0))#
histPlot(x, xlab='housing expense (dollars)', ylab='', col='#22558844')#
mtext('freqency', side=2, line=2.3, las=0)#
dev.off()
library(openintro)#
set.seed(2)#
x <- exp(rnorm(110, log(7.5), 0.2))#
t.test(x, mu=650)#
mean(x)#
sd(x)#
length(x)#
#
pdf('histOfSleepForCollegeThatWasCheckingForMoreThan7Hours.pdf', 5, 3)#
par(mar=c(3.2, 3.5, 1, 1), las=1, mgp=c(1.9, 0.7, 0))#
histPlot(x, xlab='housing expense (dollars)', ylab='', col='#22558844')#
mtext('freqency', side=2, line=2.3, las=0)#
dev.off()
library(openintro)#
set.seed(2)#
x <- exp(rnorm(110, log(7.5), 0.15))#
t.test(x, mu=650)#
mean(x)#
sd(x)#
length(x)#
#
pdf('histOfSleepForCollegeThatWasCheckingForMoreThan7Hours.pdf', 5, 3)#
par(mar=c(3.2, 3.5, 1, 1), las=1, mgp=c(1.9, 0.7, 0))#
histPlot(x, xlab='housing expense (dollars)', ylab='', col='#22558844')#
mtext('freqency', side=2, line=2.3, las=0)#
dev.off()
library(openintro)#
set.seed(2)#
x <- exp(rnorm(110, log(7.5), 0.15))#
t.test(x, mu=7)#
mean(x)#
sd(x)#
length(x)#
#
pdf('histOfSleepForCollegeThatWasCheckingForMoreThan7Hours.pdf', 5, 3)#
par(mar=c(3.2, 3.5, 1, 1), las=1, mgp=c(1.9, 0.7, 0))#
histPlot(x, xlab='housing expense (dollars)', ylab='', col='#22558844')#
mtext('freqency', side=2, line=2.3, las=0)#
dev.off()
library(openintro)#
set.seed(2)#
x <- exp(rnorm(110, log(7.5), 0.15))#
x <- x - mean(x) + 7.42#
t.test(x, mu=7)#
mean(x)#
sd(x)#
length(x)#
#
pdf('histOfSleepForCollegeThatWasCheckingForMoreThan7Hours.pdf', 5, 3)#
par(mar=c(3.2, 3.5, 1, 1), las=1, mgp=c(1.9, 0.7, 0))#
histPlot(x, xlab='housing expense (dollars)', ylab='', col='#22558844')#
mtext('freqency', side=2, line=2.3, las=0)#
dev.off()
library(openintro)#
set.seed(2)#
x <- exp(c(rnorm(100, log(7.5), 0.15), rnorm(10, log(10), 0.15)))#
x <- x - mean(x) + 7.42#
t.test(x, mu=7)#
mean(x)#
sd(x)#
length(x)#
#
pdf('histOfSleepForCollegeThatWasCheckingForMoreThan7Hours.pdf', 5, 3)#
par(mar=c(3.2, 3.5, 1, 1), las=1, mgp=c(1.9, 0.7, 0))#
histPlot(x, xlab='housing expense (dollars)', ylab='', col='#22558844')#
mtext('freqency', side=2, line=2.3, las=0)#
dev.off()
library(openintro)#
set.seed(2)#
x <- exp(c(rnorm(100, log(7.5), 0.15), rnorm(10, log(10), 0.2)))#
x <- x - mean(x) + 7.42#
t.test(x, mu=7)#
mean(x)#
sd(x)#
length(x)#
#
pdf('histOfSleepForCollegeThatWasCheckingForMoreThan7Hours.pdf', 5, 3)#
par(mar=c(3.2, 3.5, 1, 1), las=1, mgp=c(1.9, 0.7, 0))#
histPlot(x, xlab='housing expense (dollars)', ylab='', col='#22558844')#
mtext('freqency', side=2, line=2.3, las=0)#
dev.off()
library(openintro)#
set.seed(2)#
x <- exp(c(rnorm(100, log(7.5), 0.15), rnorm(10, log(10), 0.192)))#
x <- x - mean(x) + 7.42#
t.test(x, mu=7)#
mean(x)#
sd(x)#
length(x)#
#
pdf('histOfSleepForCollegeThatWasCheckingForMoreThan7Hours.pdf', 5, 3)#
par(mar=c(3.2, 3.5, 1, 1), las=1, mgp=c(1.9, 0.7, 0))#
histPlot(x, xlab='housing expense (dollars)', ylab='', col='#22558844')#
mtext('freqency', side=2, line=2.3, las=0)#
dev.off()
library(openintro)#
set.seed(2)#
x <- exp(c(rnorm(100, log(7.5), 0.15), rnorm(10, log(10), 0.196)))#
x <- x - mean(x) + 7.42#
t.test(x, mu=7)#
mean(x)#
sd(x)#
length(x)#
#
pdf('histOfSleepForCollegeThatWasCheckingForMoreThan7Hours.pdf', 5, 3)#
par(mar=c(3.2, 3.5, 1, 1), las=1, mgp=c(1.9, 0.7, 0))#
histPlot(x, xlab='housing expense (dollars)', ylab='', col='#22558844')#
mtext('freqency', side=2, line=2.3, las=0)#
dev.off()
#
pdf('pValueOneSidedSleepStudy.pdf', 4.5, 2.2)#
#
#===> plot <===##
par(las=1, mar=c(2,0,0.5,0), mgp=c(3,0.65,0))#
X <- seq(-5,5,0.01)#
Y <- dt(X, 20)#
plot(X, Y, type='l', axes=F, xlim=c(-4,4))#
axis(1, at=c(-5, 0, .37/.17, 5), label=expression(0, 'null value = 7  ', bar(x)*' = 7.42', 0), cex.axis=1.15)#
these <- which(X*0.17 + 7 >= 7.37)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
yMax <- max(Y)#
#
text(0, yMax*.4, '0.993', cex=1.2)#
#
arrows(2.56, yMax/2, 2.562, yMax/10, length=0.1)#
text(2.56, yMax/2, 'p-value\n 0.007', pos=3, cex=1.2)#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueOneSidedSleepStudy.pdf', 4.5, 2.2)#
#
#===> plot <===##
par(las=1, mar=c(2,0,0.5,0), mgp=c(3,0.65,0))#
X <- seq(-5,5,0.01)#
Y <- dt(X, 20)#
plot(X, Y, type='l', axes=F, xlim=c(-4,4))#
axis(1, at=c(-5, 0, .37/.17, 5), label=expression(0, 'null value = 7  ', bar(x)*' = 7.42', 0), cex.axis=1)#
these <- which(X*0.17 + 7 >= 7.37)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
yMax <- max(Y)#
#
text(0, yMax*.4, '0.993', cex=1.2)#
#
arrows(2.56, yMax/2, 2.562, yMax/10, length=0.1)#
text(2.56, yMax/2, 'p-value\n 0.007', pos=3, cex=1.2)#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueOneSidedSleepStudy.pdf', 4.5, 2.2)#
#
#===> plot <===##
par(las=1, mar=c(2,0,0.5,0), mgp=c(3,0.65,0))#
X <- seq(-5,5,0.01)#
Y <- dt(X, 20)#
plot(X, Y, type='l', axes=F, xlim=c(-4,4))#
axis(1, at=c(-5, 0, .37/.17, 5), label=expression(0, H[0]*': '*mu*' = 7  ', bar(x)*' = 7.42', 0), cex.axis=1)#
these <- which(X*0.17 + 7 >= 7.37)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
yMax <- max(Y)#
#
text(0, yMax*.4, '0.993', cex=1.2)#
#
arrows(2.56, yMax/2, 2.562, yMax/10, length=0.1)#
text(2.56, yMax/2, 'p-value\n 0.007', pos=3, cex=1.2)#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueOneSidedSleepStudy.pdf', 4.5, 2.2)#
#
#===> plot <===##
par(las=1, mar=c(2,0,0.5,0), mgp=c(3,0.65,0))#
X <- seq(-5,5,0.01)#
Y <- dt(X, 20)#
plot(X, Y, type='l', axes=F, xlim=c(-4,4))#
axis(1, at=c(-5, 0, .37/.17, 5), label=expression(0, '7', bar(x)*' = 7.42', 0), cex.axis=1)#
these <- which(X*0.17 + 7 >= 7.37)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
yMax <- max(Y)#
#
text(0, yMax*.4, '0.993', cex=1.2)#
#
arrows(2.56, yMax/2, 2.562, yMax/10, length=0.1)#
text(2.56, yMax/2, 'p-value\n 0.007', pos=3, cex=1.2)#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueOneSidedSleepStudy.pdf', 4.5, 2.2)#
#
#===> plot <===##
par(las=1, mar=c(2,0,0.5,0), mgp=c(3,0.65,0))#
X <- seq(-5,5,0.01)#
Y <- dt(X, 20)#
plot(X, Y, type='l', axes=F, xlim=c(-4,4))#
axis(1, at=c(-5, 0, .37/.17, 5), label=expression(0, H[0]*': '*mu*' = 7  ', bar(x)*' = 7.42', 0), cex.axis=1)#
these <- which(X*0.17 + 7 >= 7.37)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
yMax <- max(Y)#
#
text(0, yMax*.4, '0.993', cex=1.2)#
#
arrows(2.56, yMax/2, 2.562, yMax/10, length=0.1)#
text(2.56, yMax/2, 'p-value\n 0.007', pos=3, cex=1.2)#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
#
pdf('pValueOneSidedSleepStudyExplained.pdf', 5.5, 2.2)#
#
#===> plot <===##
par(las=1, mar=c(2,0,0.5,0), mgp=c(3,0.65,0))#
X <- seq(-4,4,0.01)#
Y <- dt(X, 15)#
plot(X, Y, type='l', axes=F, xlim=c(-3.8,5.5))#
axis(1, at=c(-5, 0, .37/.17, 15), label=expression(0, 'null value', 'observed '*bar(x), 0), cex.axis=1.05)#
these <- which(X*0.17 + 7 >= 7.37)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
yMax <- max(Y)#
#
arrows(-1.67, yMax*.6, -1.4, yMax*.48, length=0.1)#
text(-1.5, yMax*.8, expression('distribution of '*bar(x)), cex=1, pos=2)#
text(-1.5, yMax*.65, expression('if '*H[0]*' was true'), cex=1, pos=2)#
#
xLoc <- 1.9#
arrows(2.56, yMax/3, 2.562, yMax/10, length=0.1)#
text(xLoc, .83*yMax, expression('chance of observed '*bar(x)), pos=4, cex=1)#
text(xLoc, .7*yMax, expression('or another '*bar(x)*' that is even'), pos=4, cex=1)#
text(xLoc, .55*yMax, expression('more favorable towards '*H[A]), pos=4, cex=1)#
text(xLoc, .4*yMax, expression('IF '*H[0]*' was true'), pos=4, cex=1)#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
pdf('3rdSchSleepHTExample.pdf', 7.8, 2.2)#
#
#===> plot <===##
par(las=1, mar=c(2,0,0.5,0), mgp=c(3,0.65,0))#
X <- seq(-7,5,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.5,3.5))#
#
axis(1, at=c(-15, -.81, 0, 5), label=expression(0, bar(x)*' = 6.83', 'null value = 7   ', 0), cex.axis=1)#
these <- which(X <= -0.81)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X >= 0.81)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
yMax <- max(Y)#
#
#text(0, yMax*.4, '0.993', cex=1.2)#
#
arrows(-2, yMax/2, -1.5, yMax/5, length=0.1)#
text(-1.95, yMax*.6, 'left tail', pos=2, cex=1.2)#
#
arrows(1.7, yMax/2, 1.5, yMax/5, length=0.1)#
text(1.65, yMax*.75, expression('observations just as'), pos=4, cex=1.2)#
text(1.65, yMax*.6, expression('unusual as '*bar(x)*' under '*H[0]), pos=4, cex=1.2)#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
pdf('2ndSchSleepHTExample.pdf', 7.8, 2.2)#
#
#===> plot <===##
par(las=1, mar=c(2,0,0.5,0), mgp=c(3,0.65,0))#
X <- seq(-7,5,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.5,3.5))#
#
axis(1, at=c(-15, -.81, 0, 5), label=expression(0, bar(x)*' = 6.83', 'null value = 7   ', 0), cex.axis=1)#
these <- which(X <= -0.81)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X >= 0.81)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
yMax <- max(Y)#
#
#text(0, yMax*.4, '0.993', cex=1.2)#
#
arrows(-2, yMax/2, -1.5, yMax/5, length=0.1)#
text(-1.95, yMax*.6, 'left tail', pos=2, cex=1.2)#
#
arrows(1.7, yMax/2, 1.5, yMax/5, length=0.1)#
text(1.65, yMax*.75, expression('observations just as'), pos=4, cex=1.2)#
text(1.65, yMax*.6, expression('unusual as '*bar(x)*' under '*H[0]), pos=4, cex=1.2)#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
pdf('2ndSchSleepHTExample.pdf', 8, 2.5)#
#
#===> plot <===##
par(las=1, mar=c(2,0,0.5,0), mgp=c(3,0.65,0))#
X <- seq(-7,5,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.5,3.5))#
#
axis(1, at=c(-15, -.81, 0, 5), label=expression(0, bar(x)*' = 6.83', 'null value = 7', 0), cex.axis=0.9)#
these <- which(X <= -0.81)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X >= 0.81)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
yMax <- max(Y)#
#
#text(0, yMax*.4, '0.993', cex=1.2)#
#
arrows(-2, yMax/2, -1.5, yMax/5, length=0.1)#
text(-1.95, yMax*.6, 'left tail', pos=2, cex=1.2)#
#
arrows(1.7, yMax/2, 1.5, yMax/5, length=0.1)#
text(1.65, yMax*.75, expression('observations just as'), pos=4, cex=1.2)#
text(1.65, yMax*.6, expression('unusual as '*bar(x)*' under '*H[0]), pos=4, cex=1.2)#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
pdf('2ndSchSleepHTExample.pdf', 8, 2.5)#
#
#===> plot <===##
par(las=1, mar=c(2,0,0.5,0), mgp=c(3,0.65,0))#
X <- seq(-7,5,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.5,3.5))#
#
axis(1, at=c(-15, -.81, 0, 5), label=expression(0, bar(x)*' = 6.83', 'null value = 7', 0), cex.axis=0.9)#
these <- which(X <= -0.81)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X >= 0.81)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
yMax <- max(Y)#
#
#text(0, yMax*.4, '0.993', cex=1.2)#
#
arrows(-2, yMax/2, -1.5, yMax/5, length=0.1)#
text(-1.95, yMax*.6, 'left tail', pos=2, cex=1.2)#
#
arrows(1.7, yMax/2, 1.5, yMax/5, length=0.1)#
text(1.65, yMax*.75, expression('observations just as'), pos=4, cex=1.2)#
text(1.65, yMax*.6, expression('unusual as '*bar(x)*' under '*H[0]), pos=4, cex=1.2)#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
pdf('2ndSchSleepHTExample.pdf', 8, 2.5)#
#
#===> plot <===##
par(las=1, mar=c(2,0,0.5,0), mgp=c(3,0.65,0))#
X <- seq(-7,5,0.01)#
Y <- dnorm(X)#
plot(X, Y, type='l', axes=F, xlim=c(-3.5,3.5))#
#
axis(1, at=c(-15, -.81, 0, 5), label=expression(0, bar(x)*' = 6.83', H[0]*': '*mu*' = 7', 0), cex.axis=0.85)#
these <- which(X <= -0.81)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
these <- which(X >= 0.81)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC', border='#000000BB')#
yMax <- max(Y)#
#
#text(0, yMax*.4, '0.993', cex=1.2)#
#
arrows(-2, yMax/2, -1.5, yMax/5, length=0.1)#
text(-1.95, yMax*.6, 'left tail', pos=2, cex=1.2)#
#
arrows(1.7, yMax/2, 1.5, yMax/5, length=0.1)#
text(1.65, yMax*.75, expression('observations just as'), pos=4, cex=1.2)#
text(1.65, yMax*.6, expression('unusual as '*bar(x)*' under '*H[0]), pos=4, cex=1.2)#
#
#arrows(1.3,0.28, 0.43, 0.28, length=0.07)#
#text(-.88, 0.13, '  40%\n(0.40)', cex=0.8)#
#
lines(X, Y)#
abline(h=0)#
#
#
dev.off()
library(stockPortfolio)
install.packages('stockPortfolio')
library(stockPortfolio)
portPossCurve(CCM.s)#
abline(h=0, lty=2) # represents Rf=0
data(stock94)
CCM <- stockModel(stock94, drop=dim(stock94)[2], model='CCM')
CCM
CCM.s <- stockModel(stock94, drop=dim(stock94)[2], model='CCM')
portPossCurve(CCM.s)#
abline(h=0, lty=2) # represents Rf=0
  portPossCurve(CCM.s)#
# represents Rf=0#
  abline(h=0, lty=2)#
# identify left-most point of portfolio possibilities curve#
  (temp <- optimalPort(CCM.s, Rf=-1000))#
  points(temp)
CCM.s <- stockModel(stock94-0.1, drop=dim(stock94)[2], model='CCM')
  portPossCurve(CCM.s)#
# represents Rf=0#
  abline(h=0, lty=2)#
# identify left-most point of portfolio possibilities curve#
  (temp <- optimalPort(CCM.s, Rf=-1000))#
  points(temp)
  temp$risk
  portPossCurve(CCM.s)#
# represents Rf=0#
  abline(h=0, lty=2)#
# identify left-most point of portfolio possibilities curve#
  (temp <- optimalPort(CCM.s, Rf=-1000))#
  points(temp, optimalPortOnly=TRUE)#
# Any choice of Rf must be less than#
  temp$risk
?points.porPossCurve
points.portPossCurve
points.stockModel
points.optimalPort
points.optimalPortfolio
  portPossCurve(CCM.s)#
# represents Rf=0#
  abline(h=0, lty=2)#
# identify left-most point of portfolio possibilities curve#
  (temp <- optimalPort(CCM.s, Rf=-1000))#
  points(temp, optPortOnly=TRUE)#
# Any choice of Rf must be less than#
  temp$risk
CCM.s <- stockModel(stock94-0.2, drop=dim(stock94)[2], model='CCM')
CCM.s <- stockModel(stock94-0.015, drop=dim(stock94)[2], model='CCM')
  portPossCurve(CCM.s)#
# represents Rf=0#
  abline(h=0, lty=2)#
# identify left-most point of portfolio possibilities curve#
  (temp <- optimalPort(CCM.s, Rf=-1000))#
  points(temp, optPortOnly=TRUE)#
# Any choice of Rf must be less than#
  temp$risk
